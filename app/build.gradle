apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdk

    // 默认配置
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdk
        targetSdkVersion rootProject.ext.android.targetSdk
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // // 在打正式包时是否对代码进行检查/编译发生错误是否停止编译
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // support
    implementation rootProject.ext.dependencies["androidSupportV7"]
    implementation rootProject.ext.dependencies["recyclerviewV7"]
    implementation rootProject.ext.dependencies["androidSupportConstraint"]
    // test
    testImplementation rootProject.ext.dependencies["junitSupport"]
    androidTestImplementation rootProject.ext.dependencies["supportTestRunner"]
    androidTestImplementation rootProject.ext.dependencies["supportTestEspresso"]
    // rxjava
    implementation rootProject.ext.dependencies["rxjava"]
    implementation rootProject.ext.dependencies["rxandroid"]
    implementation rootProject.ext.dependencies["rxpermissions"]
    // retrofit
    implementation rootProject.ext.dependencies["retrofit"]
    implementation rootProject.ext.dependencies["retrofitAdapterRxJava"]
    implementation rootProject.ext.dependencies["retrofitConverterGson"]
    implementation rootProject.ext.dependencies["retrofitConverterScalars"]
    // di
    implementation rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknifeCompiler"]
    // jetbrains 注解
    implementation rootProject.ext.dependencies["jetbrainsAnnotations"]
    // Fragment 处理框架
    implementation rootProject.ext.dependencies["fragmentation"]
    // 导入图片加载库
    implementation project(rootProject.ext.dependencies["imageloaderlibrary"])
    // 导入加载对话框库
    implementation project(rootProject.ext.dependencies["loadingDialog"])
    // 导入缓存处理库
    implementation project(rootProject.ext.dependencies["cachelibrary"])
    // 导入startActivityForResult封装库
    implementation project(rootProject.ext.dependencies["ractivityresult"])
}
